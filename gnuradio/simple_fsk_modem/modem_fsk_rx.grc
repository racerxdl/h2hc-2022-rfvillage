options:
  parameters:
    author: H2HC
    catch_exceptions: 'True'
    category: '[GRC Hier Blocks]'
    cmake_opt: ''
    comment: ''
    copyright: ''
    description: ''
    gen_cmake: 'On'
    gen_linking: dynamic
    generate_options: qt_gui
    hier_block_src_path: '.:'
    id: modem_fsk_rx
    max_nouts: '0'
    output_language: python
    placement: (0,0)
    qt_qss_theme: ''
    realtime_scheduling: ''
    run: 'True'
    run_command: '{python} -u {filename}'
    run_options: prompt
    sizing_mode: fixed
    thread_safe_setters: ''
    title: FSK Modem RX
    window_size: (1000,1000)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 8]
    rotation: 0
    state: enabled

blocks:
- name: fsk_deviation_hz
  id: variable
  parameters:
    comment: "Desvio m\xE1ximo do FSK\nValor Max - Valor Min\n2200 -1200 = 1000 Hz"
    value: 2200-1200
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [32, 204.0]
    rotation: 0
    state: enabled
- name: passa_baixa
  id: variable_low_pass_filter_taps
  parameters:
    beta: '6.76'
    comment: "Filtro passa baixa para o bloco\nde frequency shift. O ponto\nde filtro\
      \ \xE9 configurado para\nfrequencia \"central\", com a\ntransi\xE7\xE3o para\
      \ o desvio maximo."
    cutoff_freq: '1700'
    gain: '1'
    samp_rate: samp_rate
    width: fsk_deviation_hz/2
    win: window.WIN_HAMMING
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [936, 356.0]
    rotation: 0
    state: true
- name: samp_rate
  id: variable
  parameters:
    comment: 'Taxa de Amostragem

      Em amostras por segundo'
    value: '48000'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [176, 12.0]
    rotation: 0
    state: enabled
- name: sps
  id: variable
  parameters:
    comment: "Amostras por s\xEDmbolo\nsamp_rate / symbol_rate"
    value: int(samp_rate/symbol_rate)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [328, 12.0]
    rotation: 0
    state: enabled
- name: symbol_rate
  id: variable
  parameters:
    comment: "Taxa de S\xEDmbolos\nEm S\xEDmbolos por segundo"
    value: '1200'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [464, 12.0]
    rotation: 0
    state: enabled
- name: syncdata
  id: variable
  parameters:
    comment: 'Palavra de Sincronia

      (Hexadecimal)'
    value: '"DEADBEEF1337"'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1032, 588.0]
    rotation: 0
    state: enabled
- name: syncdata_bits
  id: variable
  parameters:
    comment: 'Palavra de Sincronia

      (Convertido pra bits)'
    value: '"".join(["{:08b}".format(b) for b in binascii.unhexlify(syncdata)])'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1192, 588.0]
    rotation: 0
    state: enabled
- name: analog_quadrature_demod_cf_0
  id: analog_quadrature_demod_cf
  parameters:
    affinity: ''
    alias: ''
    comment: "Aqui convertemos o sinal\nde frequ\xEAncia para intensidade.\nBasicamente\
      \ -24kHz ir\xE1 virar -1\ne 24kHz ir\xE1 virar 1. Por causa \ndo deslocamento\
      \ feito no bloco\nanterior, agora teremos nossos\nbits representados pelo sinal\
      \ do \nnumero de sa\xEDda."
    gain: samp_rate/(2*math.pi*fsk_deviation_hz)
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [704, 156.0]
    rotation: 0
    state: enabled
- name: blocks_file_sink_0
  id: blocks_file_sink
  parameters:
    affinity: ''
    alias: ''
    append: 'False'
    comment: 'E podemos agora

      salvar o resultado num arquivo'
    file: demod.bin
    type: byte
    unbuffered: 'True'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [872, 612.0]
    rotation: 0
    state: true
- name: blocks_message_debug_0
  id: blocks_message_debug
  parameters:
    affinity: ''
    alias: ''
    comment: 'E podemos usar isso para imprimir

      no console toda vez que recebermos

      um PDU'
    en_uvec: 'True'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1000, 848.0]
    rotation: 0
    state: true
- name: blocks_multiply_const_vxx_0
  id: blocks_multiply_const_vxx
  parameters:
    affinity: ''
    alias: ''
    comment: "Nossos bits s\xE3o invertidos, lembra?\nA sa\xEDda do demodulador \xE9\
      \ centrada\nem 1700Hz, que \xE9 exatamente o \nmeio dos bits. Logo temos um\
      \ valor\nde bit pra -0.5 e outro pra 0.5.\nComo \xE9 invertido, aqui basta \n\
      multiplicar por -1"
    const: '-1'
    maxoutbuf: '0'
    minoutbuf: '0'
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [456, 388.0]
    rotation: 0
    state: enabled
- name: blocks_pack_k_bits_bb_0
  id: blocks_pack_k_bits_bb
  parameters:
    affinity: ''
    alias: ''
    comment: 'Agora re-empacotamos cada bit

      como um byte'
    k: '8'
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [688, 628.0]
    rotation: 0
    state: true
- name: blocks_repack_bits_bb_0
  id: blocks_repack_bits_bb
  parameters:
    affinity: ''
    alias: ''
    align_output: 'False'
    comment: "Como agora temos uma \"tagged stream\"\nprecisamos usar o Repack ao\
      \ inv\xE9s do pack\npara preservar / recalcular o valor da tag\n\"packet_len\""
    endianness: gr.GR_MSB_FIRST
    k: '1'
    l: '8'
    len_tag_key: packet_len
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [512, 836.0]
    rotation: 0
    state: true
- name: blocks_tagged_stream_align_0
  id: blocks_tagged_stream_align
  parameters:
    affinity: ''
    alias: ''
    comment: "Esse bloco vai procurar pela\nprimeira tag e alinhar a sa\xEDda\na ela."
    lengthtagname: synchead
    maxoutbuf: '0'
    minoutbuf: '0'
    type: byte
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [488, 628.0]
    rotation: 0
    state: enabled
- name: blocks_throttle_0
  id: blocks_throttle
  parameters:
    affinity: ''
    alias: ''
    comment: 'Configuramos

      o fluxo para samp_rate'
    ignoretag: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    samples_per_second: samp_rate
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [240, 124.0]
    rotation: 0
    state: true
- name: blocks_wavfile_source_0
  id: blocks_wavfile_source
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    file: /home/lucas/Works/h2hc2022/h2hc-2022-rfvillage/gnuradio/datamodulated.wav
    maxoutbuf: '0'
    minoutbuf: '0'
    nchan: '1'
    repeat: 'True'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 116.0]
    rotation: 0
    state: true
- name: digital_binary_slicer_fb_0
  id: digital_binary_slicer_fb
  parameters:
    affinity: ''
    alias: ''
    comment: "Aqui vamos fazer o \"slice\" dos\nvalores. \nSe for < 0 a sa\xEDda \xE9\
      \ 0\nSe for > 0 a sa\xEDda \xE9 1"
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [640, 392.0]
    rotation: 0
    state: enabled
- name: digital_clock_recovery_mm_xx_0
  id: digital_clock_recovery_mm_xx
  parameters:
    affinity: ''
    alias: ''
    comment: "Precisamos achar a sincronia\npara isso iremos usar o m\xE1gico\nM&M\
      \ Clock Recovery onde\nOmega \xE9 o numero de simbolos\npor amostra (sps)\n\
      O resto dos parametros \xE9 o padr\xE3o\ndo GNU Radio"
    gain_mu: '0.175'
    gain_omega: '0.1'
    maxoutbuf: '0'
    minoutbuf: '0'
    mu: '0.5'
    omega: sps
    omega_relative_limit: '0.005'
    type: float
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [248, 356.0]
    rotation: 0
    state: enabled
- name: digital_correlate_access_code_tag_xx_1
  id: digital_correlate_access_code_tag_xx
  parameters:
    access_code: syncdata_bits
    affinity: ''
    alias: ''
    comment: "Agora vamos procurar pela\nnossa palavra de sincronia.\nComo podemos\
      \ estar recebendo\no dado em \"qualquer posi\xE7\xE3o\" de bits\nprecisamos\
      \ garantir que os bits est\xE3o\nalinhados a bytes da origem. Esse bloco\nir\xE1\
      \ marcar toda vez que encontrar o \n\"Access Code\" na stream de bits com a\
      \ tag\n\"synchead\". O campo threshold especifica\na tolerancia de bits errados\
      \ na sequ\xEAncia"
    maxoutbuf: '0'
    minoutbuf: '0'
    tagname: synchead
    threshold: '4'
    type: byte
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [264, 612.0]
    rotation: 0
    state: enabled
- name: digital_correlate_access_code_xx_ts_0
  id: digital_correlate_access_code_xx_ts
  parameters:
    access_code: syncdata_bits
    affinity: ''
    alias: ''
    comment: "Com TagStream podemos sincronizar\ncom um tamanho de pacote definido\n\
      no header. Nosso pacote de exemplo\ntem dois grupos de 2 bytes representando\n\
      o tamanho do payload, logo ap\xF3s\no access code."
    maxoutbuf: '0'
    minoutbuf: '0'
    tagname: packet_len
    threshold: '4'
    type: byte
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [256, 828.0]
    rotation: 0
    state: enabled
- name: freq_xlating_fir_filter_xxx_0
  id: freq_xlating_fir_filter_xxx
  parameters:
    affinity: ''
    alias: ''
    center_freq: '1700'
    comment: "Movemos o sinal 1.7kHz para o \"lado\"\ndessa maneira, nossa faixa central\n\
      (que era 1.7kHz) agora est\xE1 em 0, e um\nbit \xE9 representado por uma frequ\xEA\
      ncia \nnegativa e outro pela positiva.\n\nPara a representa\xE7\xE3o ficar correta,\n\
      convertemos para um n\xFAmero complexo."
    decim: '1'
    maxoutbuf: '0'
    minoutbuf: '0'
    samp_rate: samp_rate
    taps: passa_baixa
    type: fcf
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [424, 116.0]
    rotation: 0
    state: true
- name: import_0
  id: import
  parameters:
    alias: ''
    comment: "Python \xAF\\_(\u30C4)_/\xAF"
    imports: import math
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [600, 20.0]
    rotation: 0
    state: true
- name: import_0_0
  id: import
  parameters:
    alias: ''
    comment: ''
    imports: import numpy as np
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [672, 20.0]
    rotation: 0
    state: true
- name: import_0_0_0
  id: import
  parameters:
    alias: ''
    comment: ''
    imports: import binascii
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [736, 20.0]
    rotation: 0
    state: true
- name: note_0
  id: note
  parameters:
    alias: ''
    comment: "As palavras de sincronia\naqui definidas, est\xE3o no \narquivo bin\xE1\
      rio. Elas s\xE3o\nutilizadas para facilitar\na decodifica\xE7\xE3o e sincronia.\n\
      \nAdicionalmente, um \"pre\xE2mbulo\"\n\xE9 adicionado para ajudar o clock\n\
      sync a achar o clock correto. Esse\npreambulo \xE9 bits 0 e 1 alternados\ndentro\
      \ de um byte. Em hexadecimal\na sequencia \xE9 0x55 0xAA"
    note: "Notas das vari\xE1veis"
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1128, 700.0]
    rotation: 0
    state: true
- name: pdu_tagged_stream_to_pdu_0
  id: pdu_tagged_stream_to_pdu
  parameters:
    affinity: ''
    alias: ''
    comment: "Agora podemos transformar\nem um \"PDU\" que \xE9 basicamente\numa mensagem."
    maxoutbuf: '0'
    minoutbuf: '0'
    tag: packet_len
    type: byte
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [728, 844.0]
    rotation: 0
    state: true
- name: qtgui_eye_sink_x_0
  id: qtgui_eye_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'True'
    axislabels: 'True'
    color1: blue
    color10: blue
    color2: blue
    color3: blue
    color4: blue
    color5: blue
    color6: blue
    color7: blue
    color8: blue
    color9: blue
    comment: "Visualiza\xE7\xE3o pra observar \na transi\xE7\xE3o entre 0 -> 1 e 1->0"
    ctrlpanel: 'False'
    entags: 'True'
    grid: 'False'
    gui_hint: ''
    label1: Signal 1
    label10: Signal 10
    label2: Signal 2
    label3: Signal 3
    label4: Signal 4
    label5: Signal 5
    label6: Signal 6
    label7: Signal 7
    label8: Signal 8
    label9: Signal 9
    legend: 'True'
    marker1: '-1'
    marker10: '-1'
    marker2: '-1'
    marker3: '-1'
    marker4: '-1'
    marker5: '-1'
    marker6: '-1'
    marker7: '-1'
    marker8: '-1'
    marker9: '-1'
    nconnections: '1'
    samp_per_symbol: sps
    size: '16384'
    srate: samp_rate
    style1: '1'
    style10: '1'
    style2: '1'
    style3: '1'
    style4: '1'
    style5: '1'
    style6: '1'
    style7: '1'
    style8: '1'
    style9: '1'
    tr_chan: '0'
    tr_delay: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_AUTO
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: float
    update_time: '0.01'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    ylabel: Amplitude
    ymax: '1'
    ymin: '-1'
    yunit: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 436.0]
    rotation: 180
    state: enabled
- name: qtgui_freq_sink_x_0
  id: qtgui_freq_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    average: '1.0'
    axislabels: 'True'
    bw: samp_rate
    color1: '"blue"'
    color10: '"dark blue"'
    color2: '"red"'
    color3: '"green"'
    color4: '"black"'
    color5: '"cyan"'
    color6: '"magenta"'
    color7: '"yellow"'
    color8: '"dark red"'
    color9: '"dark green"'
    comment: "Uma visualiza\xE7\xE3o do espectro ap\xF3s o filtro"
    ctrlpanel: 'False'
    fc: '0'
    fftsize: '1024'
    freqhalf: 'True'
    grid: 'False'
    gui_hint: ''
    label: Relative Gain
    label1: ''
    label10: ''''''
    label2: ''''''
    label3: ''''''
    label4: ''''''
    label5: ''''''
    label6: ''''''
    label7: ''''''
    label8: ''''''
    label9: ''''''
    legend: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    name: '""'
    nconnections: '1'
    norm_window: 'True'
    showports: 'False'
    tr_chan: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_tag: '""'
    type: complex
    units: dB
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    wintype: window.WIN_BLACKMAN_hARRIS
    ymax: '0'
    ymin: '-50'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [904, 60.0]
    rotation: 0
    state: true
- name: virtual_sink_0
  id: virtual_sink
  parameters:
    alias: ''
    comment: 'Agora criamos a stream

      do sinal demodulado :D'
    stream_id: demodulado
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [904, 180.0]
    rotation: 0
    state: true
- name: virtual_sink_1
  id: virtual_sink
  parameters:
    alias: ''
    comment: ''
    stream_id: bits_out
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [808, 388.0]
    rotation: 0
    state: true
- name: virtual_source_0
  id: virtual_source
  parameters:
    alias: ''
    comment: ''
    stream_id: demodulado
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [24, 388.0]
    rotation: 0
    state: true
- name: virtual_source_1
  id: virtual_source
  parameters:
    alias: ''
    comment: ''
    stream_id: bits_out
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [112, 628.0]
    rotation: 0
    state: true
- name: virtual_source_1_0
  id: virtual_source
  parameters:
    alias: ''
    comment: ''
    stream_id: bits_out
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [72, 844.0]
    rotation: 0
    state: true

connections:
- [analog_quadrature_demod_cf_0, '0', virtual_sink_0, '0']
- [blocks_multiply_const_vxx_0, '0', digital_binary_slicer_fb_0, '0']
- [blocks_pack_k_bits_bb_0, '0', blocks_file_sink_0, '0']
- [blocks_repack_bits_bb_0, '0', pdu_tagged_stream_to_pdu_0, '0']
- [blocks_tagged_stream_align_0, '0', blocks_pack_k_bits_bb_0, '0']
- [blocks_throttle_0, '0', freq_xlating_fir_filter_xxx_0, '0']
- [blocks_wavfile_source_0, '0', blocks_throttle_0, '0']
- [digital_binary_slicer_fb_0, '0', virtual_sink_1, '0']
- [digital_clock_recovery_mm_xx_0, '0', blocks_multiply_const_vxx_0, '0']
- [digital_correlate_access_code_tag_xx_1, '0', blocks_tagged_stream_align_0, '0']
- [digital_correlate_access_code_xx_ts_0, '0', blocks_repack_bits_bb_0, '0']
- [freq_xlating_fir_filter_xxx_0, '0', analog_quadrature_demod_cf_0, '0']
- [freq_xlating_fir_filter_xxx_0, '0', qtgui_freq_sink_x_0, '0']
- [pdu_tagged_stream_to_pdu_0, pdus, blocks_message_debug_0, print]
- [virtual_source_0, '0', digital_clock_recovery_mm_xx_0, '0']
- [virtual_source_0, '0', qtgui_eye_sink_x_0, '0']
- [virtual_source_1, '0', digital_correlate_access_code_tag_xx_1, '0']
- [virtual_source_1_0, '0', digital_correlate_access_code_xx_ts_0, '0']

metadata:
  file_format: 1
  grc_version: 3.10.2.0
