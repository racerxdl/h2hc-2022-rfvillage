options:
  parameters:
    author: H2HC
    catch_exceptions: 'True'
    category: '[GRC Hier Blocks]'
    cmake_opt: ''
    comment: ''
    copyright: ''
    description: ''
    gen_cmake: 'On'
    gen_linking: dynamic
    generate_options: qt_gui
    hier_block_src_path: '.:'
    id: modem_fsk_tx
    max_nouts: '0'
    output_language: python
    placement: (0,0)
    qt_qss_theme: ''
    realtime_scheduling: ''
    run: 'True'
    run_command: '{python} -u {filename}'
    run_options: prompt
    sizing_mode: fixed
    thread_safe_setters: ''
    title: FSK Modem TX
    window_size: (1000,1000)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 8]
    rotation: 0
    state: enabled

blocks:
- name: fsk_deviation
  id: variable
  parameters:
    comment: "Desvio m\xE1ximo do FSK\nValor Max - Valor Min\n2200 -1200 = 1000 Hz"
    value: 2200-1200
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [16, 268.0]
    rotation: 0
    state: enabled
- name: samp_rate
  id: variable
  parameters:
    comment: 'Taxa de Amostragem

      Em amostras por segundo'
    value: '48000'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [168, 12.0]
    rotation: 0
    state: enabled
- name: sps
  id: variable
  parameters:
    comment: "Amostras por s\xEDmbolo\nsamp_rate / symbol_rate"
    value: int(samp_rate/symbol_rate)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [456, 12.0]
    rotation: 0
    state: enabled
- name: symbol_rate
  id: variable
  parameters:
    comment: "Taxa de S\xEDmbolos\nEm S\xEDmbolos por segundo"
    value: '1200'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [304, 12.0]
    rotation: 0
    state: enabled
- name: vco_center
  id: variable
  parameters:
    comment: "Frequ\xEAncia central (valor m\xEDnimo)\nNeste caso, valor do bit 1"
    value: '1700'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [312, 268.0]
    rotation: 0
    state: enabled
- name: vco_max
  id: variable
  parameters:
    comment: "Frequ\xEAncia m\xE1xima do VCO\nPara uma entrada de valor 1f\nno VCO,\
      \ esta ser\xE1 a frequ\xEAncia\nde sa\xEDda."
    value: '2500'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [152, 268.0]
    rotation: 0
    state: enabled
- name: vco_offset
  id: variable
  parameters:
    comment: 'Offset do VCO

      vco_center/vco_max

      1200/2500 = 0.48'
    value: (vco_center-(fsk_deviation/2))/vco_max
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [680, 260.0]
    rotation: 0
    state: enabled
- name: vco_sensitivity
  id: variable
  parameters:
    comment: "Sensibilidade do VCO em radianos.\nS\xF3 convers\xE3o de Hz pra radianos\
      \ / s\n2 * pi * vco_max"
    value: (2 * math.pi * vco_max)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [488, 260.0]
    rotation: 0
    state: enabled
- name: audio_sink_0
  id: audio_sink
  parameters:
    affinity: ''
    alias: ''
    comment: 'Podemos mandar o sinal

      direto pra placa de som!'
    device_name: ''
    num_inputs: '1'
    ok_to_block: 'True'
    samp_rate: samp_rate
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [392, 508.0]
    rotation: 0
    state: enabled
- name: blocks_add_const_vxx_0
  id: blocks_add_const_vxx
  parameters:
    affinity: ''
    alias: ''
    comment: Adicionamos o offset
    const: vco_offset+0.4
    maxoutbuf: '0'
    minoutbuf: '0'
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [416, 420.0]
    rotation: 0
    state: true
- name: blocks_file_source_0
  id: blocks_file_source
  parameters:
    affinity: ''
    alias: ''
    begin_tag: pmt.PMT_NIL
    comment: "Arquivo de origem\n  (lendo em bytes)"
    file: basebin.bin
    length: '0'
    maxoutbuf: '0'
    minoutbuf: '0'
    offset: '0'
    repeat: 'True'
    type: byte
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 116.0]
    rotation: 0
    state: enabled
- name: blocks_multiply_const_vxx_0
  id: blocks_multiply_const_vxx
  parameters:
    affinity: ''
    alias: ''
    comment: Multiplicamos por -0.4
    const: '-0.4'
    maxoutbuf: '0'
    minoutbuf: '0'
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [224, 420.0]
    rotation: 0
    state: true
- name: blocks_repeat_0
  id: blocks_repeat
  parameters:
    affinity: ''
    alias: ''
    comment: "Repetimos \"sps\" vezes cada bit\ndefinindo que cada bit \xE9 um s\xED\
      mbolo."
    interp: sps
    maxoutbuf: '0'
    minoutbuf: '0'
    type: byte
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [344, 148.0]
    rotation: 0
    state: true
- name: blocks_throttle_0
  id: blocks_throttle
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    ignoretag: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    samples_per_second: samp_rate
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [704, 148.0]
    rotation: 0
    state: true
- name: blocks_uchar_to_float_0
  id: blocks_uchar_to_float
  parameters:
    affinity: ''
    alias: ''
    comment: 'Convertemos "byte" (aqui bit)

      para float (0 e 1 em float)'
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [536, 152.0]
    rotation: 0
    state: true
- name: blocks_unpack_k_bits_bb_0
  id: blocks_unpack_k_bits_bb
  parameters:
    affinity: ''
    alias: ''
    comment: "Pegando cada byte e \"desmontando\"\nele em bits.\nPor exemplo: 11110000\
      \ ir\xE1 virar um\narray de 8 bytes: [1,1,1,1,0,0,0,0]"
    k: '8'
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [176, 148.0]
    rotation: 0
    state: enabled
- name: blocks_vco_f_0
  id: blocks_vco_f
  parameters:
    affinity: ''
    alias: ''
    amplitude: '0.5'
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    samp_rate: samp_rate
    sensitivity: vco_sensitivity
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [600, 404.0]
    rotation: 0
    state: true
- name: blocks_wavfile_sink_0
  id: blocks_wavfile_sink
  parameters:
    affinity: ''
    alias: ''
    append: 'False'
    bits_per_sample1: FORMAT_PCM_16
    bits_per_sample2: FORMAT_PCM_16
    bits_per_sample3: FORMAT_VORBIS
    bits_per_sample4: FORMAT_PCM_16
    comment: "Ou salvar um arquivo de \xE1udio"
    file: datamodulated.wav
    format: FORMAT_WAV
    nchan: '1'
    samp_rate: samp_rate
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [384, 588.0]
    rotation: 0
    state: true
- name: import_0
  id: import
  parameters:
    alias: ''
    comment: "Python \xAF\\_(\u30C4)_/\xAF"
    imports: import math
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [584, 12.0]
    rotation: 0
    state: true
- name: note_0
  id: note
  parameters:
    alias: ''
    comment: "Seguiremos algo parecido com modem Bell 202\nToda vez que transmitirmos\
      \ bit 1, usaremos tom de 1200Hz\nToda vez que transmitirmos bit 0, usaremos\
      \ tom de 2200Hz\n\nUsualmente o bit 0 \xE9 chamado de ESPA\xC7O (SPACE) e bit\
      \ 1 \n\xE9 chamado de MARCADOR ou MARCA (MARK)\n\nPara gerar os sinais iremos\
      \ usar um VCO (Voltage Controlled Oscillator)\nUm VCO tem um rate de volts por\
      \ hertz para sua sa\xEDda,\nent\xE3o determinaremos um range para gerar os sinais\
      \ 1200/2200 Hz\nde acordo com os bits 0f e 1f que recebemos de bits_dos_dados\n\
      \nSe definirmos o VCO_MAX para 2500Hz, isso significa que caso um\nsinal de\
      \ valor 1 entre no VCO, a sa\xEDda ser\xE1 2500Hz. Ent\xE3o podemos\nfazer:\n\
      \nTom bit 0: 2200/2500 = 0.88f\nTom bit 1: 1200/2500 = 0.48f\n\nComo ambos valores\
      \ s\xE3o diferentes de 0, podemos especificar \num offset para o valor \"padr\xE3\
      o\", por\xE9m neste caso o 0 \xE9 a frequ\xEAncia\nmais alta, ent\xE3o iremos\
      \ inverter os bits para o \"padr\xE3o\" virar o tom de \n1200. Usando o offset\
      \ 0.48f teremos:\n\n2200 => 0.4f + 0.48f\n1200 => 0.0f + 0.48f\n\nE como podemos\
      \ inverter o bit? Assumindo que s\xF3 valores 0 e 1 \nchegam:\n\nXinv = 1f -\
      \ X \n\nCom isso temos que dado X sendo o valor do bit em float na \nentrada\
      \ do VCO precisa ser:\n\nVCO = 1f * 0.4 + 0.48f - X * 0.4\nVCO = 0.88f -  X\
      \ * 0.4\nVCO = -0.4 * X + 0.88f"
    note: "Explica\xE7\xE3o do R\xE1dio"
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1016, 52.0]
    rotation: 0
    state: true
- name: qtgui_freq_sink_x_0
  id: qtgui_freq_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    average: '1.0'
    axislabels: 'True'
    bw: samp_rate
    color1: '"blue"'
    color10: '"dark blue"'
    color2: '"red"'
    color3: '"green"'
    color4: '"black"'
    color5: '"cyan"'
    color6: '"magenta"'
    color7: '"yellow"'
    color8: '"dark red"'
    color9: '"dark green"'
    comment: "Visualiza\xE7\xE3o do sinal gerado :D"
    ctrlpanel: 'False'
    fc: '0'
    fftsize: '1024'
    freqhalf: 'False'
    grid: 'False'
    gui_hint: ''
    label: Relative Gain
    label1: ''
    label10: ''''''
    label2: ''''''
    label3: ''''''
    label4: ''''''
    label5: ''''''
    label6: ''''''
    label7: ''''''
    label8: ''''''
    label9: ''''''
    legend: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    name: '""'
    nconnections: '1'
    norm_window: 'True'
    showports: 'False'
    tr_chan: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_tag: '""'
    type: float
    units: dB
    update_time: '0.01'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    wintype: window.WIN_BLACKMAN_hARRIS
    ymax: '10'
    ymin: '-140'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [16, 660.0]
    rotation: 180
    state: true
- name: qtgui_time_sink_x_0
  id: qtgui_time_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    axislabels: 'True'
    color1: blue
    color10: dark blue
    color2: red
    color3: green
    color4: black
    color5: cyan
    color6: magenta
    color7: yellow
    color8: dark red
    color9: dark green
    comment: ''
    ctrlpanel: 'False'
    entags: 'True'
    grid: 'False'
    gui_hint: ''
    label1: Signal 1
    label10: Signal 10
    label2: Signal 2
    label3: Signal 3
    label4: Signal 4
    label5: Signal 5
    label6: Signal 6
    label7: Signal 7
    label8: Signal 8
    label9: Signal 9
    legend: 'True'
    marker1: '-1'
    marker10: '-1'
    marker2: '-1'
    marker3: '-1'
    marker4: '-1'
    marker5: '-1'
    marker6: '-1'
    marker7: '-1'
    marker8: '-1'
    marker9: '-1'
    name: '""'
    nconnections: '1'
    size: '1024'
    srate: samp_rate
    stemplot: 'False'
    style1: '1'
    style10: '1'
    style2: '1'
    style3: '1'
    style4: '1'
    style5: '1'
    style6: '1'
    style7: '1'
    style8: '1'
    style9: '1'
    tr_chan: '0'
    tr_delay: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: float
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    ylabel: Amplitude
    ymax: '1'
    ymin: '-1'
    yunit: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [16, 580.0]
    rotation: 180
    state: true
- name: virtual_sink_0
  id: virtual_sink
  parameters:
    alias: ''
    comment: "Criamos um fluxo de sa\xEDda\npara os \"dados\" a serem\ntransmitidos.\n\
      Para bit 0 teremos valor 0f\nPara bit 1 teremos valor 1f"
    stream_id: bits_dos_dados
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [848, 148.0]
    rotation: 0
    state: true
- name: virtual_sink_1
  id: virtual_sink
  parameters:
    alias: ''
    comment: "Aqui temos nossa sa\xEDda com\nos bits modulados em FSK!"
    stream_id: saida_fsk
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [800, 420.0]
    rotation: 0
    state: true
- name: virtual_source_0
  id: virtual_source
  parameters:
    alias: ''
    comment: 'Aqui coletamos os bits

      gerados acima.'
    stream_id: bits_dos_dados
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [16, 420.0]
    rotation: 0
    state: true
- name: virtual_source_1
  id: virtual_source
  parameters:
    alias: ''
    comment: Nosso sinal modulado
    stream_id: saida_fsk
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [16, 508.0]
    rotation: 0
    state: true

connections:
- [blocks_add_const_vxx_0, '0', blocks_vco_f_0, '0']
- [blocks_file_source_0, '0', blocks_unpack_k_bits_bb_0, '0']
- [blocks_multiply_const_vxx_0, '0', blocks_add_const_vxx_0, '0']
- [blocks_repeat_0, '0', blocks_uchar_to_float_0, '0']
- [blocks_throttle_0, '0', virtual_sink_0, '0']
- [blocks_uchar_to_float_0, '0', blocks_throttle_0, '0']
- [blocks_unpack_k_bits_bb_0, '0', blocks_repeat_0, '0']
- [blocks_vco_f_0, '0', virtual_sink_1, '0']
- [virtual_source_0, '0', blocks_multiply_const_vxx_0, '0']
- [virtual_source_1, '0', audio_sink_0, '0']
- [virtual_source_1, '0', blocks_wavfile_sink_0, '0']
- [virtual_source_1, '0', qtgui_freq_sink_x_0, '0']
- [virtual_source_1, '0', qtgui_time_sink_x_0, '0']

metadata:
  file_format: 1
  grc_version: 3.10.2.0
